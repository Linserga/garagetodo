1. SELECT distinct status FROM tasks ORDER BY status ASC;

2. SELECT count(*) as count FROM tasks GROUP BY project_id ORDER BY count DESC; 

3. SELECT count(*) as count, projects.name FROM tasks INNER JOIN projects ON tasks.project_id = projects.id GROUP BY projects.id ORDER BY projects.name;
4. SELECT * FROM tasks WHERE name LIKE 'N%';

5. SELECT projects.name, count(*) as count FROM projects RIGHT OUTER JOIN tasks on projects.id = tasks.project_id WHERE projects.name LIKE "%a%" GROUP BY projects.id;

6. SELECT name, count(id) as quantity FROM tasks GROUP BY name HAVING quantity > 1; 

7. SELECT tasks.name, count(tasks.id) as quantity FROM tasks inner JOIN projects on tasks.project_id = projects.id WHERE projects.name = 'Garage' GROUP BY tasks.name, tasks.status HAVING quantity > 1 ORDER BY quantity desc;

8. SELECT projects.name, count(tasks.status) as quantity FROM projects JOIN tasks on projects.id = tasks.project_id WHERE tasks.status = 'completed' GROUP BY projects.name HAVING quantity > 10 ORDER BY tasks.project_id; 

----------------------------------------------------

class Task < ActiveRecord::Base
  belongs_to :project
end

class Project < ActiveRecord::Base
	has_many :tasks
end

----------------------------------------------------
1. Task.select(:status).order(:status).distinct

2. Task.all.group(:project_id).count.sort_by{|k,v|v}.reverse

3. Task.joins(:project).group(:project_id).order('projects.name').count

4. Task.joins(:project).where('tasks.name like ?', "N%")

5. Project.where('projects.name like ?', '%a%').joins(:tasks).group('projects.name').count

6. Task.select('id, count(id) as quantity').group(:name).having('quantity > 1')

7. Task.select('tasks.id, count(tasks.id) as quantity, tasks.name, status').group(:name, :status).having('quantity > 1').joins(:project).where("projects.name = 'Garage'").order('quantity')

8. Project.select('projects.name, projects.id').joins(:tasks).group('projects.name').having('count(tasks.status) > 10').order('projects.id')
